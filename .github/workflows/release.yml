name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    outputs:
      goos: ${{ matrix.goos }}
      goarch: ${{ matrix.goarch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20

      - name: Build
        run: |
          mkdir -p build
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/neatfile-${{ matrix.goos }}-${{ matrix.goarch }} main.go

      - name: Archive binaries
        run: |
          mkdir -p dist
          zip -j dist/neatfile-${{ matrix.goos }}-${{ matrix.goarch }}.zip build/neatfile-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Generate SHA256 checksums
        run: |
          shasum -a 256 dist/neatfile-${{ matrix.goos }}-${{ matrix.goarch }}.zip > dist/neatfile-${{ matrix.goos }}-${{ matrix.goarch }}.sha256

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: neatfile-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/neatfile-${{ matrix.goos }}-${{ matrix.goarch }}.zip

      - name: Upload SHA256 checksums
        uses: actions/upload-artifact@v4
        with:
          name: neatfile-${{ matrix.goos }}-${{ matrix.goarch }}-sha256
          path: dist/neatfile-${{ matrix.goos }}-${{ matrix.goarch }}.sha256

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: neatfile-${{ needs.build.outputs.goos }}-${{ needs.build.outputs.goarch }}
          path: dist

      - name: Download SHA256 checksums
        uses: actions/download-artifact@v4
        with:
          name: neatfile-${{ needs.build.outputs.goos }}-${{ needs.build.outputs.goarch }}-sha256
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}